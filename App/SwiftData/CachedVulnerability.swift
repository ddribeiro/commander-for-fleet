//
//  CachedVulnerability.swift
//  FleetDMViewer
//
//  Created by Dale Ribeiro on 1/8/24.
//
//

import Foundation
import SwiftData

@Model class CachedVulnerability {
    var id: String { cve }
    var cisaKnownExploit: Bool?
    @Attribute(.unique) var cve: String
    var cveDescription: String?
    var cvePublished: Date?
    var cvssScore: Double?
    var detailsLink: String
    var epssProbability: Double?
    var resolvedInVersion: String?
    var software: CachedSoftware?

    init(
        cisaKnownExploit: Bool? = nil,
        cve: String,
        cveDescription: String? = nil,
        cvePublished: Date? = nil,
        cvssScore: Double? = nil,
        detailsLink: String,
        epssProbability: Double? = nil,
        resolvedInVersion: String? = nil,
        software: CachedSoftware? = nil
    ) {
        self.cisaKnownExploit = cisaKnownExploit
        self.cve = cve
        self.cveDescription = cveDescription
        self.cvePublished = cvePublished
        self.cvssScore = cvssScore
        self.detailsLink = detailsLink
        self.epssProbability = epssProbability
        self.resolvedInVersion = resolvedInVersion
        self.software = software
    }
}

extension CachedVulnerability {
    convenience init(from vulnerability: Vulnerability) {
        self.init(
            cisaKnownExploit: vulnerability.cisaKnownExploit,
            cve: vulnerability.cve,
            cveDescription: vulnerability.cveDescription,
            cvePublished: vulnerability.cvePublished,
            cvssScore: vulnerability.cvssScore,
            detailsLink: vulnerability.detailsLink,
            epssProbability: vulnerability.epssProbability,
            resolvedInVersion: vulnerability.resolvedInVersion
            )
    }
}

// extension Array where Element: CachedVulnerability {
//    subscript(id: CachedVulnerability.ID?) -> CachedVulnerability? {
//        first { $0.id == id }
//    }
// }
